
public class consDict<V> implements Dict<V> {
	String k;
	V v;
	Dict<V> rest;
	// has-key : Key -> Boolean
	// Does the given key exist?
	public boolean hasKey(String key) {
		if (key.compareTo(this.k) == 0) {
			return true;
		} else {
			return this.rest.hasKey(key);
		}
	}
	// lookup : Key -> V
	// The value mapped to by the given key
	public V lookup(String key) {
		if (key.compareTo(this.k) == 0) {
			return this.v;
		} else {
			return this.rest.lookup(key);
		}
	}
	// set : Key V -> Dict<V>
	// Set the given key-value mapping
	public Dict<V> set(String key, V v) {
		return new consDict<V>(key, v, this);
	}
	
	public consDict(String k, V v, Dict<V> rest) {
		this.k = k;
		this.v = v;
		this.rest = rest;
	}
}
